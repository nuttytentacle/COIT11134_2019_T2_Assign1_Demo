
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author lib
 */
public class VehicleFleetGUI extends javax.swing.JFrame {

    /**
     * Creates new form VehicleFleetGUI
     */
    public VehicleFleetGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupType = new ButtonGroup();
        labelTitle = new JLabel();
        labelType = new JLabel();
        rbCar = new JRadioButton();
        rbTruck = new JRadioButton();
        labelModel = new JLabel();
        tfModel = new JTextField();
        labelBuild = new JLabel();
        tfBuild = new JTextField();
        labelFuel = new JLabel();
        tfFuel = new JTextField();
        labelPassengers = new JLabel();
        cbPassengers = new JComboBox();
        labelTonnage = new JLabel();
        tfTonnage = new JTextField();
        btnEnter = new JButton();
        btnReset = new JButton();
        btnShowFleet = new JButton();
        btnExit = new JButton();
        jScrollPane1 = new JScrollPane();
        taDisplay = new JTextArea();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        labelTitle.setFont(new Font("Tahoma", 1, 24)); // NOI18N
        labelTitle.setText("Vehicle Fleet Management");

        labelType.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        labelType.setText("Select type of Vehicle:");

        buttonGroupType.add(rbCar);
        rbCar.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        rbCar.setText("Car");

        buttonGroupType.add(rbTruck);
        rbTruck.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        rbTruck.setText("Truck");

        labelModel.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        labelModel.setText("Model:");

        tfModel.setFont(new Font("Tahoma", 0, 14)); // NOI18N

        labelBuild.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        labelBuild.setText("Build Year/Month:");

        tfBuild.setFont(new Font("Tahoma", 0, 14)); // NOI18N

        labelFuel.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        labelFuel.setText("Fuel Economy:");

        tfFuel.setFont(new Font("Tahoma", 0, 14)); // NOI18N

        labelPassengers.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        labelPassengers.setText("Max Passengers:");

        cbPassengers.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        cbPassengers.setModel(new DefaultComboBoxModel(new String[] { "Select value", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        labelTonnage.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        labelTonnage.setText("Tonnage:");

        tfTonnage.setFont(new Font("Tahoma", 0, 14)); // NOI18N

        btnEnter.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        btnEnter.setText("Enter");
        btnEnter.addActionListener(formListener);

        btnReset.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(formListener);

        btnShowFleet.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        btnShowFleet.setText("Show Fleet");
        btnShowFleet.addActionListener(formListener);

        btnExit.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(formListener);

        taDisplay.setEditable(false);
        taDisplay.setColumns(20);
        taDisplay.setFont(new Font("Monospaced", 1, 16)); // NOI18N
        taDisplay.setRows(5);
        jScrollPane1.setViewportView(taDisplay);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(labelType)
                                        .addComponent(labelModel)
                                        .addComponent(labelBuild)
                                        .addComponent(labelFuel)
                                        .addComponent(labelPassengers)
                                        .addComponent(labelTonnage))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(tfModel)
                                        .addComponent(tfBuild)
                                        .addComponent(tfFuel)
                                        .addComponent(tfTonnage)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                .addComponent(cbPassengers, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(rbCar)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(rbTruck)))
                                            .addGap(0, 0, Short.MAX_VALUE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(btnEnter)
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnReset)
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnShowFleet)
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                    .addComponent(btnExit)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(labelTitle)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(labelType)
                    .addComponent(rbCar)
                    .addComponent(rbTruck))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(labelModel)
                    .addComponent(tfModel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBuild)
                    .addComponent(tfBuild, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFuel)
                    .addComponent(tfFuel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPassengers)
                    .addComponent(cbPassengers, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTonnage)
                    .addComponent(tfTonnage, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(btnEnter)
                    .addComponent(btnReset)
                    .addComponent(btnShowFleet)
                    .addComponent(btnExit))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements ActionListener {
        FormListener() {}
        public void actionPerformed(ActionEvent evt) {
            if (evt.getSource() == btnEnter) {
                VehicleFleetGUI.this.btnEnterActionPerformed(evt);
            }
            else if (evt.getSource() == btnExit) {
                VehicleFleetGUI.this.btnExitActionPerformed(evt);
            }
            else if (evt.getSource() == btnShowFleet) {
                VehicleFleetGUI.this.btnShowFleetActionPerformed(evt);
            }
            else if (evt.getSource() == btnReset) {
                VehicleFleetGUI.this.btnResetActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnterActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnEnterActionPerformed
        // to execute when the Enter button is clicked
        
        Vehicle newVehicle = null;  // used to reference the newly created vehicle
        
        // if input has been validated
        if( formIsValidated() )
        {
            // pre-reading common values between Car and Truck
            String model = tfModel.getText();
            String build = tfBuild.getText();
            double fuel = Double.parseDouble( tfFuel.getText() );            
            
            // create a Car or Truck object depending on user selection
            if( rbCar.isSelected() )    // Car is selected
            {
                // create a Car object
                int passengers = cbPassengers.getSelectedIndex();                
                newVehicle = new Car(model, build, fuel, passengers);
            }
            else    // Truck is selected
            {
                // create a Truck object
                double tonnage = Double.parseDouble( tfTonnage.getText() );                
                newVehicle = new Truck(model, build, fuel, tonnage);
            }
            
            // add newly created object into array list
            vehicleList.add(newVehicle);
            
            // let the user know that a vehicle has been added to the fleet
            JOptionPane.showMessageDialog(null, "The following Vehicle has been added:\n" + newVehicle.toString());
            
            // clear the form
            resetForm();
        }
    }//GEN-LAST:event_btnEnterActionPerformed

    private boolean formIsValidated()
    {
        // at least one radio button for type must be selected
        if( !(rbCar.isSelected() || rbTruck.isSelected()) )
        {
            return false;
        }
            
        // model must have a value
        if( tfModel.getText().equals("") )
        {
            return false;
        }
        
        // build must have a value
        if( tfBuild.getText().equals("") )
        {
            return false;
        }

        // fuel econ must have a numeric value
        if( !testNumericString( tfFuel.getText() ) )
        {
            return false;
        }
        
        if(rbCar.isSelected())  // if car
        {
            // passengers combobox must not have index 0 select
            if( cbPassengers.getSelectedIndex() == 0)
            {
                return false;
            }
        }
        else    // if truck
        {
            // tonnage must have a numeric value
            if( !testNumericString( tfTonnage.getText() ) )
            {
                return false;
            }
        }
        
        return true;    // all tests have passed, return true
    }
    
    private boolean testNumericString(String input)
    {
        if(input.equals(""))    // empty string
        {
            return false;
        }
        else if(input == null)  // null string
        {
            return false;
        }
        else
        {
            try
            {
                Double.parseDouble(input);
                return true;
            }
            catch(NumberFormatException nfe)
            {
                return false;
            }
        }            
    }
    
    private void btnExitActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // to execute when the Exit button is clicked
        int response = JOptionPane.showConfirmDialog(null, "Do you want to exit?");
        
        if(response == JOptionPane.YES_OPTION)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnShowFleetActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnShowFleetActionPerformed
        // to execute when the Show Fleet button is clicked
        
        taDisplay.setText("");  // clear display
        
        // for all vehicles inside the list, append the text to the display
        for(Vehicle currentVehicle : vehicleList)
        {
            taDisplay.append( currentVehicle.toString() + "\n\n");            
        }
        
    }//GEN-LAST:event_btnShowFleetActionPerformed

    private void btnResetActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // to execute when the Show Fleet button is clicked
        
        resetForm();
    }//GEN-LAST:event_btnResetActionPerformed

    private void resetForm()
    {
        rbCar.setSelected(false);
        rbTruck.setSelected(false);
        tfModel.setText("");
        tfBuild.setText("");
        tfFuel.setText("");
        cbPassengers.setSelectedIndex(0);
        tfTonnage.setText("");
        taDisplay.setText("");        
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VehicleFleetGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VehicleFleetGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VehicleFleetGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VehicleFleetGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VehicleFleetGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton btnEnter;
    private JButton btnExit;
    private JButton btnReset;
    private JButton btnShowFleet;
    private ButtonGroup buttonGroupType;
    private JComboBox cbPassengers;
    private JScrollPane jScrollPane1;
    private JLabel labelBuild;
    private JLabel labelFuel;
    private JLabel labelModel;
    private JLabel labelPassengers;
    private JLabel labelTitle;
    private JLabel labelTonnage;
    private JLabel labelType;
    private JRadioButton rbCar;
    private JRadioButton rbTruck;
    private JTextArea taDisplay;
    private JTextField tfBuild;
    private JTextField tfFuel;
    private JTextField tfModel;
    private JTextField tfTonnage;
    // End of variables declaration//GEN-END:variables

    // user defined instance variables
    ArrayList<Vehicle> vehicleList = new ArrayList<Vehicle>();
}
